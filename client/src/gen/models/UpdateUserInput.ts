/* tslint:disable */
/* eslint-disable */
/**
 * HelloApiSchema
 * Practice api schema
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: doriven@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateUserInput
 */
export interface UpdateUserInput {
    /**
     * 
     * @type {number}
     * @memberof UpdateUserInput
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserInput
     */
    emailAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserInput
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserInput
     */
    firstName?: string;
    /**
     * 
     * @type {Date}
     * @memberof UpdateUserInput
     */
    birthday?: Date;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserInput
     */
    address?: string;
}

export function UpdateUserInputFromJSON(json: any): UpdateUserInput {
    return UpdateUserInputFromJSONTyped(json, false);
}

export function UpdateUserInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateUserInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'emailAddress': !exists(json, 'email_address') ? undefined : json['email_address'],
        'lastName': !exists(json, 'last_name') ? undefined : json['last_name'],
        'firstName': !exists(json, 'first_name') ? undefined : json['first_name'],
        'birthday': !exists(json, 'birthday') ? undefined : (new Date(json['birthday'])),
        'address': !exists(json, 'address') ? undefined : json['address'],
    };
}

export function UpdateUserInputToJSON(value?: UpdateUserInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'email_address': value.emailAddress,
        'last_name': value.lastName,
        'first_name': value.firstName,
        'birthday': value.birthday === undefined ? undefined : (value.birthday.toISOString().substr(0,10)),
        'address': value.address,
    };
}

